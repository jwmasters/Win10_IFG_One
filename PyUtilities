# Utilities for happy coding

#---------------------------------------------------
#--binary search with mid logic---------------------
#--look for a value with in the list             ---
def bsearch(l, value):
  lo, hi = 0, len(l) -1
  while lo <= hi:
      mid = (lo + hi) // 2
      if l[mid] < value:
          lo = mid + 1
      elif value < l[mid]:
          hi = mid - 1
      else:
          return mid
  return -1
# test the function with parameters
# l = [0, 1, 2, 3, 4, 5, 6]
# x = 2
# print(bsearch(l, x))
#---------------------------------------------------

#------------------------------------------------------------------------
#--bubblesort search           ------------------------------------------
#--sort low to high and keep duplicate           ------------------------
def bubblesort(lst):
    for passesLeft in range(len(lst) - 1, 0, -1):
        for index in range(passesLeft):
            if lst[index] > lst[index + 1]:
                lst[index], lst[index + 1] = lst[index + 1], lst[index]
    return lst
# test bubblesort with data
# l = [27, 0, 71, 70, 27, 63, 90]
# print(bubblesort(l))
#------------------------------------------------------------------------
